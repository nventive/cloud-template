#!/usr/bin/env just --justfile

azd_version := "1.10.3"

set shell := ["bash", "-c"]

# run the project locally (same as "run")
default: run

# starts VS Code with appropriate environment variables to allow for debugging
code:
    #!/usr/bin/env bash
    # Eliminate environment variables introduced by the nix shell that interfere
    # with Aspire debugging in VS Code. See https://github.com/dotnet/aspire/issues/5389 and
    # https://github.com/dotnet/aspire/issues/5475
    export -n DIRENV_DIFF
    export -n NIX_CFLAGS_COMPILE
    export -n NIX_LDFLAGS
    export -n PYTHONPATH
    export -n name
    export -n shell
    code .

# run the project locally
run:
    dotnet run --project src/Placeholder.AppHost

# Check if yarn packages are installed and install them if not
yarn-install:
    cd src/Placeholder.Web && yarn install --immutable

# Upgrades nix packages to latest version, .Net and Node packages to latest minor version.
upgrade:
    nix flake update
    direnv reload
    jq --arg new_version "$(dotnet --version)" '.sdk.version = $new_version' global.json | sponge global.json
    cd src/ && dotnet outdated -u
    just upgrade-aspire-sdk
    cd src/Placeholder.Web && ncu --target minor -u && yarn install

upgrade-aspire-sdk:
    #!/usr/bin/env bash
    cd src/Placeholder.AppHost/
    NEW_ASPIRE_VERSION=$(dotnet list package --include-transitive --format json \
        | jq '.projects[0].frameworks[0].transitivePackages[] | select(.id == "Aspire.Hosting") | .resolvedVersion')
    sd '(<Sdk Name="Aspire\.AppHost\.Sdk" Version=)"[^"]+"()' '$1'$NEW_ASPIRE_VERSION'$2' Placeholder.AppHost.csproj

# ================================
#         Migrations
# ================================

# Get the current timestamp
timestamp := datetime("%Y%m%d%H%M%S")

# Defines the target directory
target_dir := "src/Placeholder.Migration/Migrations/" + datetime("%Y") + "/" + datetime("%m")

# Generate a migration file with the specified name
create-migration MIGRATION_NAME:
    mkdir -p {{target_dir}}
    sed "s/{timestamp}/{{ timestamp }}/g; s/{name}/{{ MIGRATION_NAME }}/g" src/Placeholder.Migration/Migrations/template.txt > "{{target_dir}}/{{timestamp}}_{{MIGRATION_NAME}}.cs"
    echo "Migration file created at {{target_dir}}/{{timestamp}}_{{MIGRATION_NAME}}.cs"
